# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('..'))
sys.path.insert(0, os.path.abspath('.'))

# -- Project information -----------------------------------------------------

project = os.getenv("PROJECT_NAME","")
copyright = os.getenv("COPYRIGHT","")
author = os.getenv("AUTHOR", "")
index_doc = 'index'
company = os.getenv("COMPANY", "")
# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinxcontrib.plantuml',
    'lib.ext.markdown'
]

plantuml = 'java -jar ' + os.getenv("PLANTUML_HOME", os.path.join(os.getcwd(),"lib","plantuml.jar"))

source_suffix = ['.rst', '.md']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'ja'
# LaTeX の docclass 設定
# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# -- Options for LaTeX output ---------------------------------------------
latex_engine = "platex"

latex_elements = {
    'papersize': 'a4paper',
    'preamble': """%
\\pagenumbering{arabic}
\\let\\pyOldTableofcontents=\\tableofcontents
\\renewcommand{\\tableofcontents}{
  \\begingroup
  \\parskip = 0mm
  \\pyOldTableofcontents
  \\endgroup
  \\vspace{12pt}
}
""",
}

latex_docclass = {
    'howto': 'jsarticle',
    'manual': 'jsbook',
}

title = os.getenv("PROJECT_NAME","")

latex_name = os.environ.get("LATEX_TARGET_NAME", title)

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (index_doc, latex_name + '.tex', title, company, 'manual'),
]

latex_domain_indices = False

latex_show_pagerefs = True
